{
  "scripts": {
    "build": "rimraf ../dist && webpack --config config/webpack.config.js",
    "local": "rimraf ../dist && webpack --config config/webpack.config.local.js",
    "prod": "rimraf ../dist && webpack --env RUN_TYPE=local --config config/webpack.config.prod.js",
    "start-dev-server-external": "webpack serve --config config/webpack.config.dev.js ",
    "start-dev-server-local": "NODE_ENV=development webpack serve --env RUN_TYPE=local --config config/webpack.config.dev.js ",
    "start": "NODE_ENV=production webpack serve --config config/webpack.config.dev.js ",
    "check": "npm run check:lint && npm run check:test",
    "check:lint": "eslint --ext .js,.ts,.jsx,.tsx src/",
    "check:lint:fix": "eslint --ext .js,.ts,.jsx,.tsx src/ --fix",
    "check:test": "jest",
    "check:ts": "tsc --noEmit",
    "inst": "npm i",
    "removeAndInst": "rimraf node_modules && npm i",
    "generate:api-client": "openapi-generator-cli generate -i http://127.0.0.1:3000/api-json -g typescript-fetch -o generated-sources/openapi --additional-properties=ngVersion=6.1.7,npmName=restClient,supportsES6=true,npmVersion=6.9.0,withInterfaces=true,typescriptThreePlus=true"
  },
  "name": "mvd-ui",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@babel/core": "7.12.10",
    "@babel/plugin-proposal-class-properties": "7.12.1",
    "@babel/preset-env": "7.12.11",
    "@babel/runtime": "7.12.5",
    "@date-io/date-fns": "^1.3.13",
    "@material-ui/core": "4.11.2",
    "@material-ui/icons": "4.11.2",
    "@material-ui/lab": "4.0.0-alpha.57",
    "@material-ui/pickers": "^3.2.10",
    "@reduxjs/toolkit": "1.5.0",
    "@types/jwt-decode": "3.1.0",
    "date-fns": "^2.17.0",
    "formik": "^2.2.6",
    "formik-material-ui": "^3.0.1",
    "jwt-decode": "3.1.2",
    "local-storage": "2.0.0",
    "material-auto-rotating-carousel": "^3.0.2",
    "react": "17.0.1",
    "react-dom": "17.0.1",
    "react-redux": "7.2.2",
    "react-router-dom": "5.2.0",
    "react-swipeable-views": "^0.13.9",
    "react-toastify": "6.2.0"
  },
  "devDependencies": {
    "@babel/preset-typescript": "7.12.7",
    "@types/history": "4.7.8",
    "@types/jest": "26.0.20",
    "@types/node": "14.14.20",
    "@types/react": "17.0.0",
    "@types/react-dom": "17.0.0",
    "@types/react-redux": "7.1.15",
    "@types/react-router-dom": "5.1.7",
    "@types/webpack-env": "1.16.0",
    "@typescript-eslint/eslint-plugin": "4.12.0",
    "@typescript-eslint/parser": "4.12.0",
    "babel-jest": "26.6.3",
    "babel-loader": "8.2.2",
    "clean-webpack-plugin": "3.0.0",
    "css-loader": "5.0.1",
    "eslint": "7.17.0",
    "eslint-plugin-react": "7.22.0",
    "file-loader": "6.2.0",
    "html-webpack-plugin": "4.5.1",
    "jest": "26.6.3",
    "jest-marbles": "2.5.1",
    "jest-transform-stub": "2.0.0",
    "node-sass": "5.0.0",
    "rimraf": "3.0.2",
    "source-map-loader": "2.0.0",
    "style-loader": "2.0.0",
    "ts-jest": "26.4.4",
    "ts-loader": "8.0.14",
    "typescript": "4.1.3",
    "webpack": "5.21.2",
    "webpack-cli": "4.5.0",
    "webpack-dev-server": "4.0.0-beta.0",
    "webpack-merge": "5.7.3"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "jest": {
    "rootDir": ".",
    "moduleFileExtensions": [
      "js",
      "json",
      "ts",
      "tsx"
    ],
    "transform": {
      "^.+\\.ts$": "<rootDir>/node_modules/ts-jest",
      "^.+\\.tsx$": "<rootDir>/node_modules/ts-jest",
      ".+\\.(css|styl|less|sass|scss|png|jpg|svg|ttf|woff|woff2)$": "<rootDir>/node_modules/jest-transform-stub"
    },
    "moduleNameMapper": {
      "^containers(.*)$": "<rootDir>/src/app/containers/$1",
      "^helpers(.*)$": "<rootDir>/src/app/helpers/$1",
      "^components(.*)$": "<rootDir>/src/app/components/$1",
      "^rest(.*)$": "<rootDir>/src/app/rest/$1",
      "^locales(.*)$": "<rootDir>/src/app/locales/$1",
      "^enums(.*)$": "<rootDir>/src/app/enums/$1",
      "^src(.*)$": "<rootDir>/src/$1",
      "^openapi(.*)$": "<rootDir>/generated-sources/openapi/$1"
    },
    "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$"
  }
}
