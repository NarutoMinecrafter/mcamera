/* tslint:disable */
/* eslint-disable */
/**
 * Mvd
 * The Mvd API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Device,
    DeviceFromJSON,
    DeviceFromJSONTyped,
    DeviceToJSON,
} from './';

/**
 * 
 * @export
 * @interface Photo
 */
export interface Photo {
    /**
     * 
     * @type {number}
     * @memberof Photo
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Photo
     */
    originalName: string;
    /**
     * 
     * @type {string}
     * @memberof Photo
     */
    originaltime: string;
    /**
     * 
     * @type {string}
     * @memberof Photo
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Photo
     */
    path: string;
    /**
     * 
     * @type {string}
     * @memberof Photo
     */
    type: string;
    /**
     * 
     * @type {Date}
     * @memberof Photo
     */
    createDateTime: Date;
    /**
     * 
     * @type {string}
     * @memberof Photo
     */
    source: PhotoSourceEnum;
    /**
     * 
     * @type {Device}
     * @memberof Photo
     */
    device: Device;
    /**
     * 
     * @type {number}
     * @memberof Photo
     */
    deviceId: number;
}

export function PhotoFromJSON(json: any): Photo {
    return PhotoFromJSONTyped(json, false);
}

export function PhotoFromJSONTyped(json: any, ignoreDiscriminator: boolean): Photo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'originalName': json['originalName'],
        'originaltime': json['originaltime'],
        'name': json['name'],
        'path': json['path'],
        'type': json['type'],
        'createDateTime': (new Date(json['createDateTime'])),
        'source': json['source'],
        'device': DeviceFromJSON(json['device']),
        'deviceId': json['deviceId'],
    };
}

export function PhotoToJSON(value?: Photo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'originalName': value.originalName,
        'originaltime': value.originaltime,
        'name': value.name,
        'path': value.path,
        'type': value.type,
        'createDateTime': (value.createDateTime.toISOString()),
        'source': value.source,
        'device': DeviceToJSON(value.device),
        'deviceId': value.deviceId,
    };
}

/**
* @export
* @enum {string}
*/
export enum PhotoSourceEnum {
    BM = 'BM',
    MD = 'MD',
    EoM = 'EoM',
    Sch = 'Sch'
}


